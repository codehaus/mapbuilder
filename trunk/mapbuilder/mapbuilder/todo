Query Functionality:
--------------------
* GetFeatureInfo.xsl should have a maxFeature param which defaults to 1
* Feature to be rendered over MapPane.
* Gml2.js to be renamed to FeatureCollection.js
* proxy.php to return Content Type
* Proxy.js to handle Content Type
* proxy.php to return errors in Service Exception XML format
* Proxy.js to handle the format.
* InfoFormat to be stored in Config file.
* Legend to highlight to selected Layer
* When Layer is selected, Query button should be selected.
* SelectedTool state should be stored in a model instead of Widgets so that
  legend can change it.

Tools:
------
* Move <dependsOn> property from config file to each Tool js code.
* Move <class> property from config file to each Tool js code.

* Remove directory widget/tool

* Add a getVersion() function which returns the mapbuilder-lib version.

* Move Context2FeatureInfo.xml out of widget/tool

* allow MapPane widget to have a fixed size (values specified in HTML); context 
  window is resized to fit

* locator map to show thumbnail of mainMap (optional behaviour)

* re-implement getFeatureInfo

* Move Extent out of Context.js

Future Work
===========
* Work out Xpath and updating Context.

* Handle invalid context files and basedir

* Legend.js to pass Context param into XSL transform.

* MapPane XSL needs to check if parameters are defined.

* ??Introduce a unique Id into Context for each Layer.

* WMS capabilities model, widgets, tools

* add/remove/re-order context layers

* config schema as RDF extension

* WFS layers as SVG 

* write a build script
  - imports external libraries
  - generate jsdocs

* Set up http://generguide.sf.net Developers Guide for this project

* Set up Unit Testing.
