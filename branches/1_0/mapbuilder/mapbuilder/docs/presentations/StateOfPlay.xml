<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">
<article>
  <title>Community Mapbuilder State Of Play - June 2005</title>

  <abstract>
    <para>I think that we have reached a stage in the Mapbuilder project where
    we should look at what we have achieved, look at the state of the software
    world around us, and plan our future.</para>

    <para>We have recently seen a number of new names join the Mapbuilder
    email list and I invite all our you to contribute to this
    discussion.</para>
  </abstract>

  <section>
    <title>Where have we come from?</title>

    <para>The Community Mapbuilder website started in 2001 as my idea to build
    a Geo-Wiki and was originally planned to bring together WMS/WFS-T
    components into one easy to configure application. The only thing missing
    was a WFS-T client and I started working on the developing Geotools
    library to create a Java client.</para>

    <para>In 2003 Raj Singh demonstrated the potential of a web based client
    by producing the first prototype web based feature entry client which
    talked directly to a database. From then we started mapbuilder-lib,
    initially a WMS client, then a WFS-T client which conformed to OGC
    standards.</para>

    <para>As we developed further, we joined efforts with Nedjo Rodgers, Mike
    Adair, Tom Kralidis and Tom Schuller who were all working on similar
    projects. Mapbuider-lib broadened it's scope from being a geo-wiki to
    being a robust client to OGC services.</para>

    <para>In mid 2005, Geoserver, an open source WFS-T included mapbuilder-lib
    in it's distribution and Mapbuilder started gaining more interest and
    attracted more developers.</para>
  </section>

  <section>
    <title>What are Mapbuilder's Strengths?</title>

    <variablelist>
      <varlistentry>
        <term>WMS/WFS-T in a browser</term>

        <listitem>
          <para>Mapbuilder runs in a standard web browser without requiring
          any plug ins. This makes Mapbuilder easy to use for non-technical
          users.</para>

          <para>Clients are fast and feature rich because most code is stored
          in the client, accessing Web Services using Asynchronous Javascript
          And XML (AJAX).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Modular design</term>

        <listitem>
          <para>Mapbuilder's modular design makes it easy to add extra
          functionality.</para>

          <para>Tailored clients are kept small by only including the required
          modules.</para>

          <para>We have the opportunity to factor out core modules (like our
          projection libraries) to be used and improved by other
          projects.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Standards compliant</term>

        <listitem>
          <para>Standards compliance means that Mapbuilder can build upon the
          great work done in the Open GIS services projects.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Strong user community</term>

        <listitem>
          <para></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>What software industry developments effect us?</title>

    <para>The advantage of working with Open Source software is that we don't
    need to look at competing projects as threats, they are potential
    partners. Together we can help each other become better.</para>

    <section>
      <title>Asynchronous Javascript And XML (AJAX)</title>

      <para>AJAX describes a way for web browsers to refresh themselves
      quickly using asynchronous javascript functions. This functionality has
      been available for a couple of years but has only recently become
      popular since it's use by high profile Google web sites.</para>

      <para>Recently, a hand full of AJAX library projects have started and
      have a strong user base behind them. These project are young and
      Mapbuilder still contains a significant amount of AJAX functionality
      beyond that provided by the libraries. In particular, Mapbuilder's
      Model/View/Controller design pattern and dynamic loading of widgets
      would be a useful addition to the AJAX libraries.</para>

      <para>The Mapbuilder project should consider factoring out it's AJAX
      libraries and merging them into one of the existing AJAX library
      projects.</para>
    </section>

    <section>
      <title>Other Web Based Geographic Clients</title>

      <para>Mapbuilder currently has a number of features not yet provided by
      other Web Mapping Clients, however, there are some features from other
      projects that would be nice to include. Where possible, we should try to
      collaborate with these projects and merge our efforts. We can do this by
      factoring out and sharing common libraries or merging our efforts into
      one project.</para>
    </section>

    <section>
      <title>Geoserver</title>

      <para>Geoserver, the Open Source WMS/WFS has incorporated Mapbuilder
      into it's release. This is a good relationship for us because:</para>

      <itemizedlist>
        <listitem>
          <para>We are getting exposure with our core potential user
          base.</para>
        </listitem>

        <listitem>
          <para>We are seeing developers join Mapbuilder from the Geoserver
          project.</para>
        </listitem>
      </itemizedlist>

      <para>Gabriel Roland pointed out that we can make cross development
      easier by using similar tools. In particular, we should consider moving
      some functionality from Sourceforge to <ulink
      url="http://www.codehaus.org/">http://www.codehaus.org/</ulink>.</para>
    </section>

    <section>
      <title>Geographic Wiki</title>

      <para>Significant interest is developing for a Geographic Wiki, where
      many people can collaboratively build geographic maps. Mapbuilder would
      be an ideal client for a Geographic Wiki and we should aim be involved
      in any such project.</para>

      <para>This will introduce a many new challenges, like handling user
      authentication.</para>
    </section>

    <section>
      <title>Content Management Systems (CMS)</title>

      <para>Content Management Systems are one of the big potential users of
      Map Viewers and Feature Entry Clients. Unfortunately there are hundreds
      of CMS products and there doesn't seem to be a standard
      interface.</para>

      <para>Java CMS seem to be a better position with standard portlet
      specifications and we may be able to target these first.</para>

      <para>Nedjo Rodgers notes that Mapbuilder contains many components
      needed by CMSs and that different CMSs will all face similar problems.
      We should encourage the development of a CMS integration toolkit.</para>
    </section>

    <section>
      <title>Browser support for SVG</title>

      <para>It seems that version 7 browsers will provide SVG support by
      default. This means that we can make use of SVG's more powerful
      rendering and we can expect average users will still be able to use our
      web pages.</para>
    </section>

    <section>
      <title>Use stable release numbers</title>

      <para>Mike Adair notes that potential users are scared by our "alpha"
      version numbers. We should create a 1.0 release and advertise the
      existence of applications using Mapbuilder.</para>
    </section>
  </section>

  <section>
    <title>Opportunities for improvement</title>

    <section>
      <title>Testing</title>

      <para>With only two core developers, and while software was still in
      alpha state we were able to get away without automated testing. However
      we are now at a stage where we should consider automated testing
      frameworks like jsunit.</para>

      <para>Advantages of automated testing includes:</para>

      <itemizedlist>
        <listitem>
          <para>We can easily test Mapbuilder against new browsers and
          platforms as they become available.</para>
        </listitem>

        <listitem>
          <para>We can test our updates don't break another part of the code.
          This is more important as the software becomes more complex and
          there are more developers working on sections we are not familiar
          with.</para>
        </listitem>

        <listitem>
          <para>Software can be released more frequently because the head
          version of the software should always be working.</para>
        </listitem>

        <listitem>
          <para>Our releases should become more robust.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Design Patterns</title>

      <para>There are a number of areas in Mapbuilder which could be improved
      by the introduction of design patterns. Good use of design patterns will
      simplify the code and make it easier to maintain. We should review then
      refactor our code for this.</para>
    </section>

    <section>
      <title>Memory Leaks</title>

      <para>Memory leaks in a browser can cause a browser to crash or
      significantly slow a computer down. We were not considering Memory Leaks
      when writing the code, so they probably exist. We should be able to
      minimise Memory Leaks if we use an AJAX library which addresses
      leaks.</para>
    </section>

    <section>
      <title>Documentation</title>

      <para>While we have made a start our documentation needs to be updated.
      Good documentation is essential for attracting and keeping potential
      developers.</para>

      <para>Nedjo Rodgers and others noted that we need concrete guides for
      developers. For example, A guide for creating widgets. This should be
      combined with mentoring from core developers.</para>

      <para>Chris Holmes noted that it is easier to build documentation in a
      wiki as it is continuously updated by users. In particular we should
      consider using Codehaus.</para>
    </section>

    <section>
      <title>Professional Look and Feel</title>

      <para>Feedback I've been getting often includes "The technology is
      great, but we need a sexy interface to sell Mapbuilder to decision
      makers". We need to provide a sexy interface to Mapbuilder and we need
      to ensure we have a stable demonstration release.</para>
    </section>
  </section>

  <section>
    <title>Recommendations</title>

    <variablelist>
      <varlistentry>
        <term>AJAX</term>

        <listitem>
          <para>Contact AJAX library projects, suggest working toward a common
          AJAX library then coordinate exporting Mapbuilder functionality into
          one of these projects.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Projection Libraries</term>

        <listitem>
          <para>Export the projection libraries into a separate project so it
          can be used by other projects.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Review design</term>

        <listitem>
          <para>Review the design, introduce design patterns, refactor
          code.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Update documentation</term>

        <listitem>
          <para>In particular, concrete examples of how developers should do
          specific tasks (like creating a widget).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Produce a Professional Look and Feel</term>

        <listitem>
          <para></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Codehaus</term>

        <listitem>
          <para>We should ask if we can get Mapbuilder hosted on
          http://www.codehaus.org. It provides subversion, better bug
          tracking, a wiki for documentation, and is used by Geoserver and
          Geotools, projects which we aim to align ourselves with.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SVG</term>

        <listitem>
          <para>We should encourage developers who may be interested in adding
          SVG support.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>CMS</term>

        <listitem>
          <para>We should encourage the development of a CMS integration HOWTO
          and collaboration from people integrating Mapbuilder into different
          CMSs.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Create a 1.0 release</term>

        <listitem>
          <para>We should create a 1.0 release and advertise the existence of
          applications using Mapbuilder.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
</article>